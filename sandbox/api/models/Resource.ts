/* tslint:disable */
/* eslint-disable */
/**
 * Babylon PTE API
 * Babylon Public Test Environment (PTE) API specification.
 *
 * The version of the OpenAPI document: 0.1.22
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ResourceMetadata,
    ResourceMetadataFromJSON,
    ResourceMetadataFromJSONTyped,
    ResourceMetadataToJSON,
} from './ResourceMetadata';

/**
 * 
 * @export
 * @interface Resource
 */
export interface Resource {
    /**
     * 
     * @type {string}
     * @memberof Resource
     */
    resourceType: string;
    /**
     * 
     * @type {number}
     * @memberof Resource
     */
    divisibility: number;
    /**
     * 
     * @type {Array<ResourceMetadata>}
     * @memberof Resource
     */
    metadata: Array<ResourceMetadata>;
    /**
     * 
     * @type {string}
     * @memberof Resource
     */
    totalSupply: string;
}

export function ResourceFromJSON(json: any): Resource {
    return ResourceFromJSONTyped(json, false);
}

export function ResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Resource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'resourceType': json['resource_type'],
        'divisibility': json['divisibility'],
        'metadata': ((json['metadata'] as Array<any>).map(ResourceMetadataFromJSON)),
        'totalSupply': json['total_supply'],
    };
}

export function ResourceToJSON(value?: Resource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'resource_type': value.resourceType,
        'divisibility': value.divisibility,
        'metadata': ((value.metadata as Array<any>).map(ResourceMetadataToJSON)),
        'total_supply': value.totalSupply,
    };
}

